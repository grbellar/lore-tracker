version: '3.8'

services:
  # PostgreSQL 18 - Development instance
  postgres:
    image: postgres:18
    container_name: loretracker-postgres-dev
    environment:
      POSTGRES_DB: loretracker_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d loretracker_dev"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - loretracker-dev-network
    restart: unless-stopped

  # Neo4j 5 - Development instance
  neo4j:
    image: neo4j:5
    container_name: loretracker-neo4j-dev
    environment:
      NEO4J_AUTH: neo4j/secretdev
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_memory_heap_initial__size: 256m
      NEO4J_dbms_memory_heap_max__size: 1G
      NEO4J_dbms_memory_pagecache_size: 256m
    volumes:
      - neo4j_dev_data:/data
      - neo4j_dev_logs:/logs
      - ./neo4j/init.cypher:/var/lib/neo4j/import/init.cypher
    ports:
      - "7474:7474"  # HTTP Browser UI
      - "7687:7687"  # Bolt protocol
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p secretdev 'RETURN 1' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 20s
    networks:
      - loretracker-dev-network
    restart: unless-stopped

  # Next.js Web Application - Development mode with hot reload
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: loretracker-web-dev
    environment:
      # Database connections
      DATABASE_URL: postgresql://postgres:secret@postgres:5432/loretracker_dev?schema=public

      # Neo4j connection
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: secretdev

      # NextAuth
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: development-secret-change-in-production

      # Node environment
      NODE_ENV: development
      PORT: 3000

      # Enable debug mode
      DEBUG: '*'

      # Disable telemetry
      NEXT_TELEMETRY_DISABLED: 1
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src
      - ./app:/app/app
      - ./lib:/app/lib
      - ./types:/app/types
      - ./public:/app/public
      - ./prisma:/app/prisma
      - ./package.json:/app/package.json
      - ./next.config.ts:/app/next.config.ts
      - ./tsconfig.json:/app/tsconfig.json
      - ./tailwind.config.ts:/app/tailwind.config.ts

      # Prevent overwriting node_modules
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js debugger
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    networks:
      - loretracker-dev-network
    restart: unless-stopped
    stdin_open: true
    tty: true
    command: npm run dev

networks:
  loretracker-dev-network:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local
  neo4j_dev_data:
    driver: local
  neo4j_dev_logs:
    driver: local
