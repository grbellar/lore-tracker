version: '3.8'

services:
  # PostgreSQL 18 - User accounts, auth, subscriptions
  postgres:
    image: postgres:18
    container_name: loretracker-postgres
    environment:
      POSTGRES_DB: loretracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d loretracker"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - loretracker-network
    restart: unless-stopped

  # Neo4j 5 - Story data (characters, locations, events, relationships)
  neo4j:
    image: neo4j:5
    container_name: loretracker-neo4j
    environment:
      NEO4J_AUTH: neo4j/secret
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 2G
      NEO4J_dbms_memory_pagecache_size: 512m
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - ./neo4j/init.cypher:/var/lib/neo4j/import/init.cypher
    ports:
      - "7474:7474"  # HTTP Browser UI
      - "7687:7687"  # Bolt protocol
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p secret 'RETURN 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - loretracker-network
    restart: unless-stopped

  # Next.js Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: loretracker-web
    environment:
      # Database connections
      DATABASE_URL: postgresql://postgres:secret@postgres:5432/loretracker?schema=public

      # Neo4j connection
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: secret

      # NextAuth
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-change-this-in-production}

      # Node environment
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    networks:
      - loretracker-network
    restart: unless-stopped

networks:
  loretracker-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
